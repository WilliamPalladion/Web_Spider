验证码识别

验证码与爬虫之间的关系：
   - 验证码是一种反爬机制
   - 需要我们识别验证码图片中的数据，用于模拟登陆操作

识别验证码的操作：
   - 人工肉眼识别（效率低，不推荐）
   - 第三方自动识别
     - 云打码（挂了）
     - 超级鹰
       - 注册，登陆，充值
       - 软件ID > 添加软件 (获得软件ID)
       - 下载示例对应语言到本地解压，获得chaojiying.py，修改几个部分，见
         https://blog.csdn.net/weixin_40576010/article/details/89196671

模拟登陆：
   - 爬取基于某些用户的用户信息
需求：对人人网进行模拟登陆
   - 点击登陆后会发起一个POST请求
   - POST请求会携带登陆之前录入的相关的登录信息（用户名，密码，验证码...）
   - 如果保存下来的数据时个人的页面，就意味着模拟登陆成功了
   - 验证码：每次请求都会动态变化

需求：爬取当前用户的相关信息（个人主页中的用户信息）

http/https协议特性：无状态
   - 服务器端不会记录我们的登陆状态，因此发起的第二次基于个人主页页面请求的时候，服务器并不知道此请求是基于登录状态下的请求

cookie: 用来让服务器端记录客户端的相关状态
   - 用抓包工具记录，找到Name下一条叫profile的记录，在Request Headers里面有Cookie这一项
   - 这里包含在请求中的cookie就是服务器端用来记录客户端状态的

1. 手动cookie处理：通过抓包工具获取cookie值，并封装到headers中（不方便，且有的网站的cookie是有时长的）
headers = {
    'cookie': 'xxxxxx'
}

2. 自动处理：
   - cookie值的来源是哪里
     - 模拟登陆POST请求后，由服务器端进行创建（在Response headers里有Set-Cookie）
   - session会话对象：
     - 作用：1.可以进行请求的发送
            2.如果请求过程中产生了cookie，则该cookie会被自动存储/携带在session对象中

   - 步骤：
     - 创建一个session对象：requests.Session()
     - 使用session对象进行模拟登陆POST请求的发送（cookie就会被存储在session中）
     - session对象对个人主页对应的get请求进行发送（携带了cookie）



代理：（破解封IP反爬机制）
   - 单位时间内同一个IP请求次数过多会被反爬机制拒绝，所以我们希望伪装IP来让服务端识别不出，来防止封IP
什么是代理：
   - 代理服务器（中转请求，不直接向web服务器端发起请求）
代理的作用：
   - 突破IP访问限制
   - 隐藏自身真实IP，免收攻击
代理相关的网站：
   - 快代理
   - 西祠代理
   - www.goubanjia.com

(以www.goubanjia.com为例)

代理的类型：
   - http：应用到http协议对应的url中
   - https：应用到https协议对应的url中

代理IP的匿名度：
   - 透明：服务器知道该次请求使用了代理，也知道请求对应的真实ip
   - 匿名：知道使用了代理，不知道真实ip
   - 高匿：不知道使用了代理，更不知道真实ip

requests.get(url=url, headers=headers, proxies={"https": '58.22.177.14:9999'})
